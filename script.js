// script.js

document.addEventListener('DOMContentLoaded', () => {

  const CATALOG_URL = 'catalog.json';

  let catalog = [];
  let currentCategory = null;
  let currentSubcategory = null;
  let cart = [];

  const CATEGORIES = [
    { name: '–ú—É–∂—Å–∫–æ–µ', sub: ['–†—é–∫–∑–∞–∫–∏', '–°—É–º–∫–∏', '–û–±—É–≤—å'] },
    { name: '–ñ–µ–Ω—Å–∫–æ–µ', sub: ['–†—é–∫–∑–∞–∫–∏', '–°—É–º–∫–∏', '–û–±—É–≤—å'] },
    { name: '–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã',     sub: [] }
  ];

  // –ó–∞–≥—Ä—É–∑–∏—Ç—å JSON‚Äë–∫–∞—Ç–∞–ª–æ–≥ –∏ —Å—Ç–∞—Ä—Ç–æ–≤–∞—Ç—å
  async function fetchCatalog() {
    const res = await fetch(CATALOG_URL);
    catalog = await res.json();
    showCategories();
  }

  // –ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ç—Ä–∏ —Ç–æ–ø‚Äë–∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  function showCategories() {
    currentCategory = null;
    currentSubcategory = null;
    document.getElementById('products').innerHTML = '';
    renderCategoryButtons();
  }

  // –ù–∞—Ä–∏—Å–æ–≤–∞—Ç—å –∫–Ω–æ–ø–∫–∏ (–ª–∏–±–æ —Ç–æ–ø‚Äë—É—Ä–æ–≤–Ω—è, –ª–∏–±–æ ¬´‚Üê –ù–∞–∑–∞–¥¬ª + –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π)
  function renderCategoryButtons() {
    const nav = document.getElementById('categories');
    nav.innerHTML = '';

    if (!currentCategory) {
      // –¢–û–ü‚Äë–£–†–û–í–ï–ù–¨
      CATEGORIES.forEach(cat => {
        const btn = document.createElement('button');
        btn.textContent = cat.name;
        btn.classList.toggle('active', false);
        btn.onclick = () => {
          currentCategory = cat.name;
          currentSubcategory = null;
          renderCategoryButtons();
          if (!cat.sub.length) renderProducts();
        };
        nav.appendChild(btn);
      });

    } else {
      // –ö–Ω–æ–ø–∫–∞ ¬´‚Üê –ù–∞–∑–∞–¥¬ª
      const back = document.createElement('button');
      back.textContent = '‚Üê –ù–∞–∑–∞–¥';
      back.onclick = showCategories;
      nav.appendChild(back);

      // –ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –Ω–æ —Å–∫—Ä—ã–≤–∞–µ–º "–û–±—É–≤—å"
      const cat = CATEGORIES.find(c => c.name === currentCategory);
      const visibleSubs = cat.sub.filter(sub => sub !== '–û–±—É–≤—å');

      visibleSubs.forEach(sub => {
        const btn = document.createElement('button');
        btn.textContent = sub;
        btn.classList.toggle('active', currentSubcategory === sub);
        btn.onclick = () => {
          currentSubcategory = sub;
          renderProducts();
          renderCategoryButtons();
        };
        nav.appendChild(btn);
      });

      // –ï—Å–ª–∏ –ø–æ—Å–ª–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –Ω–µ—Ç –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π ‚Äî —Å—Ä–∞–∑—É –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–≤–∞—Ä—ã
      if (!visibleSubs.length) renderProducts();
    }
  }

  // –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –∏ –ø–æ–∫–∞–∑–∞—Ç—å –∫–∞—Ä—Ç–æ—á–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤
  function renderProducts() {
    const main = document.getElementById('products');
    main.innerHTML = '';

    const filtered = catalog.filter(item => {
      if (currentCategory === '–ú—É–∂—Å–∫–∞—è –æ–¥–µ–∂–¥–∞' && item.gender === 'male')
        return !currentSubcategory || item.category === currentSubcategory;
      if (currentCategory === '–ñ–µ–Ω—Å–∫–∞—è –æ–¥–µ–∂–¥–∞' && item.gender === 'female')
        return !currentSubcategory || item.category === currentSubcategory;
      if (currentCategory === '–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã' && item.gender === 'unisex')
        return true;
      return false;
    });

    if (!filtered.length) {
      main.innerHTML = '<p style="color:#bfa000; text-align:center; margin-top:32px;">–ù–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –≤ —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.</p>';
      return;
    }
    filtered.forEach(item => main.appendChild(productCard(item)));
  }

  // –í–µ—Ä–Ω—É—Ç—å DOM‚Äë—É–∑–µ–ª –∫–∞—Ä—Ç–æ—á–∫–∏ —Ç–æ–≤–∞—Ä–∞
  function productCard(item) {
    const card = document.createElement('div');
    card.className = 'product-card';

    // –ì–∞–ª–µ—Ä–µ—è
    const gallery = document.createElement('div');
    gallery.className = 'product-gallery';
    const img = document.createElement('img');
    let idx = 0;
    img.src = item.images[0];
    gallery.appendChild(img);
    if (item.images.length > 1) {
      const nav = document.createElement('div');
      nav.className = 'gallery-nav';
      const prev = document.createElement('button');
      prev.textContent = '‚Üê';
      const next = document.createElement('button');
      next.textContent = '‚Üí';
      prev.onclick = () => {
        idx = (idx - 1 + item.images.length) % item.images.length;
        img.src = item.images[idx];
      };
      next.onclick = () => {
        idx = (idx + 1) % item.images.length;
        img.src = item.images[idx];
      };
      nav.append(prev, next);
      gallery.appendChild(nav);
    }
    card.appendChild(gallery);

    // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    const h2 = document.createElement('h2');
    h2.textContent = item.name;
    card.appendChild(h2);

    const sku = document.createElement('div');
    sku.className = 'sku';
    sku.textContent = '–ê—Ä—Ç–∏–∫—É–ª: ' + item.sku;
    card.appendChild(sku);

    const desc = document.createElement('div');
    desc.className = 'desc';
    desc.textContent = item.description;
    card.appendChild(desc);

    const price = document.createElement('div');
    price.className = 'price';
    price.textContent = item.price ? `${item.price} ‚ÇΩ` : '';
    card.appendChild(price);

    // –ö–Ω–æ–ø–∫–∞ ¬´–í –∫–æ—Ä–∑–∏–Ω—É¬ª
    const btn = document.createElement('button');
    btn.className = 'add-to-cart';
    btn.textContent = '–í –∫–æ—Ä–∑–∏–Ω—É';
    btn.onclick = () => addToCart(item);
    card.appendChild(btn);

    return card;
  }

  // –ö–æ—Ä–∑–∏–Ω–∞
  function addToCart(item) {
    const found = cart.find(ci => ci.sku === item.sku);
    if (found) found.qty++;
    else cart.push({ ...item, qty: 1 });
    showCart();
  }

  function showCart() {
    const panel   = document.getElementById('cart-panel');
    const items   = document.getElementById('cart-items');
    const summary = document.getElementById('cart-summary');
    if (!cart.length) {
      panel.classList.remove('active');
      return;
    }
    panel.classList.add('active');
    items.innerHTML = '';
    cart.forEach(i => {
      const line = document.createElement('div');
      line.innerHTML = `
        <b>${i.name}</b> (${i.sku}) ‚Äî ${i.price}‚ÇΩ √ó ${i.qty}
        <button data-sku="${i.sku}" class="minus">‚àí</button>
        <button data-sku="${i.sku}" class="plus">+</button>
      `;
      items.appendChild(line);
    });
    items.querySelectorAll('button').forEach(b => {
      const sku = b.dataset.sku;
      b.onclick = () => {
        const it = cart.find(x => x.sku === sku);
        b.classList.contains('plus') ? it.qty++ : it.qty--;
        cart = cart.filter(x => x.qty > 0);
        showCart();
      };
    });
    const total = cart.reduce((s, x) => s + x.price * x.qty, 0);
    summary.innerHTML = `<b>–ò—Ç–æ–≥–æ:</b> ${total} ‚ÇΩ`;
  }

  document.getElementById('checkout-btn').onclick = () => {
    if (!cart.length) return;
    let text = 'üõí –ù–æ–≤—ã–π –∑–∞–∫–∞–∑%0A';
    cart.forEach(i => {
      text += `${i.name} (${i.sku}) ‚Äî ${i.qty}√ó${i.price}‚ÇΩ%0A`;
    });
    const total = cart.reduce((s, x) => s + x.qty * x.price, 0);
    text += `–ò—Ç–æ–≥–æ: ${total}‚ÇΩ%0A`;
    window.open(
      'https://t.me/MirrorWearSupport?text=' + encodeURIComponent(text),
      '_blank'
    );
  };

  document.getElementById('clear-cart-btn').onclick = () => {
    cart = [];
    showCart();
  };

  window.addEventListener('click', e => {
    const p = document.getElementById('cart-panel');
    if (
      p.classList.contains('active') &&
      !p.contains(e.target) &&
      e.target.id !== 'checkout-btn'
    ) {
      p.classList.remove('active');
    }
  });

  // –ó–∞–ø—É—Å–∫
  fetchCatalog();
});
