// script.js
document.addEventListener('DOMContentLoaded', () => {
  const CATALOG_URL = 'catalog.json';
  let catalog = [];
  let currentCategory = null;
  let currentSubcategory = null;
  let cart = [];

  const CATEGORIES = [
    { name: '–ú—É–∂—Å–∫–æ–µ',    gender: 'male',   sub: ['–†—é–∫–∑–∞–∫–∏', '–°—É–º–∫–∏'] },
    { name: '–ñ–µ–Ω—Å–∫–æ–µ',    gender: 'female', sub: ['–†—é–∫–∑–∞–∫–∏', '–°—É–º–∫–∏'] },
    { name: '–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã', gender: 'unisex', sub: [] }
  ];

  // === –£—Ç–∏–ª–∏—Ç—ã ==============================================================
  function navEl() {
    return document.getElementById('categories');
  }

  function clearFocus() {
    document.activeElement?.blur?.();
    const nav = navEl();
    if (nav) nav.querySelectorAll('button, a, .category-btn').forEach(el => el.blur());
  }

  function ensureNoActiveOnRoot() {
    // –ù–∞ –∫–æ—Ä–Ω–µ–≤–æ–º —É—Ä–æ–≤–Ω–µ –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å .active –Ω–∏ —É –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–∏
    const nav = navEl();
    if (!nav) return;
    if (nav.dataset.level === 'root') {
      nav.querySelectorAll('.active').forEach(el => el.classList.remove('active'));
      // —Å—Ç—Ä–∞—Ö–æ–≤–∫–∞ –Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –±—Ä–∞—É–∑–µ—Ä –≤–µ—Ä–Ω—É–ª —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–∑ BFCache –∏ –Ω–∞–≤–µ—Å–∏–ª —Ñ–æ–∫—É—Å
      clearFocus();
      // –µ—â—ë –æ–¥–Ω–∞ –º–∏–∫—Ä–æ–∑–∞–¥–µ—Ä–∂–∫–∞ ‚Äî –µ—Å–ª–∏ —Å—Ç–∏–ª–∏ –ø—Ä–∏–º–µ–Ω—è—é—Ç—Å—è –ø–æ—Å–ª–µ –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∫–∏
      setTimeout(() => {
        nav.querySelectorAll('.active').forEach(el => el.classList.remove('active'));
        clearFocus();
      }, 0);
    }
  }

  // –ü—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ –ø–æ –∏—Å—Ç–æ—Ä–∏–∏ –∏ BFCache —Å–Ω–∏–º–∞–µ–º —Ñ–æ–∫—É—Å/–ø–æ–¥—Å–≤–µ—Ç–∫—É
  window.addEventListener('popstate', () => {
    clearFocus();
    ensureNoActiveOnRoot();
  });
  window.addEventListener('pageshow', () => {
    clearFocus();
    ensureNoActiveOnRoot();
  });

  // === 1) –ó–∞–≥—Ä—É–∑–∫–∞ –∫–∞—Ç–∞–ª–æ–≥–∞ =================================================
  async function fetchCatalog() {
    const res = await fetch(CATALOG_URL);
    catalog = await res.json();
    showCategories();
  }

  // === 2) –ü–æ–∫–∞–∑–∞—Ç—å –∫–æ—Ä–Ω–µ–≤—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ======================================
  function showCategories() {
    currentCategory = null;
    currentSubcategory = null;
    document.getElementById('products').innerHTML = '';
    renderCategoryButtons();
    clearFocus();
    ensureNoActiveOnRoot();
  }

  // === 3) –†–µ–Ω–¥–µ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–π/–ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π ====================================
  function renderCategoryButtons() {
    const nav = navEl();
    nav.innerHTML = '';

    // –ö–æ—Ä–µ–Ω—å
    if (!currentCategory) {
      nav.dataset.level = 'root';

      CATEGORIES.forEach(cat => {
        const btn = document.createElement('button');
        btn.textContent = cat.name;
        // –ù–∞ –∫–æ—Ä–Ω–µ –∑–∞–ø—Ä–µ—â–∞–µ–º –ª—é–±—ã–µ –∞–∫—Ç–∏–≤—ã
        btn.classList.remove('active');

        btn.onclick = e => {
          e.stopPropagation();
          currentCategory = cat.name;
          currentSubcategory = null;
          renderCategoryButtons();
          if (cat.sub.length === 0) renderProducts();
          btn.blur();
        };

        nav.appendChild(btn);
      });

      // –ù–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π –ø–æ–¥—á–∏—Å—Ç–∏–º –≤—Å—ë –∞–∫—Ç–∏–≤–Ω–æ–µ
      ensureNoActiveOnRoot();
      return;
    }

    // –ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    nav.dataset.level = 'sub';

    const back = document.createElement('button');
    back.textContent = '‚Üê –ù–∞–∑–∞–¥';
    back.onclick = e => {
      e.stopPropagation();
      showCategories();
      back.blur();
    };
    nav.appendChild(back);

    const catObj = CATEGORIES.find(c => c.name === currentCategory);
    catObj.sub.forEach(sub => {
      const btn = document.createElement('button');
      btn.textContent = sub;
      btn.classList.toggle('active', currentSubcategory === sub);
      btn.onclick = e => {
        e.stopPropagation();
        currentSubcategory = sub;
        renderProducts();
        renderCategoryButtons();
        btn.blur();
      };
      nav.appendChild(btn);
    });

    if (catObj.sub.length === 0) renderProducts();
  }

  // === 4) –†–µ–Ω–¥–µ—Ä —Ç–æ–≤–∞—Ä–æ–≤ ====================================================
  function renderProducts() {
    const main = document.getElementById('products');
    main.innerHTML = '';

    const catObj = CATEGORIES.find(c => c.name === currentCategory);
    if (!catObj) return;

    const filtered = catalog.filter(item => {
      if (item.gender !== catObj.gender) return false;
      if (currentSubcategory && item.category !== currentSubcategory) return false;
      return true;
    });

    if (filtered.length === 0) {
      main.innerHTML = '<p style="color:#bfa000;text-align:center;margin-top:32px;">–ù–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –≤ —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.</p>';
      return;
    }

    filtered.forEach(item => main.appendChild(productCard(item)));
  }

  // === 5) –ö–∞—Ä—Ç–æ—á–∫–∞ —Ç–æ–≤–∞—Ä–∞ ===================================================
  function productCard(item) {
    const card = document.createElement('div');
    card.className = 'product-card';

    const gallery = document.createElement('div');
    gallery.className = 'product-gallery';
    const img = document.createElement('img');
    let idx = 0;
    img.src = item.images[0];
    gallery.appendChild(img);

    if (item.images.length > 1) {
      const nav = document.createElement('div');
      nav.className = 'gallery-nav';
      const prev = document.createElement('button');
      const next = document.createElement('button');
      prev.textContent = '‚Üê'; next.textContent = '‚Üí';
      prev.onclick = () => { idx = (idx - 1 + item.images.length) % item.images.length; img.src = item.images[idx]; };
      next.onclick = () => { idx = (idx + 1) % item.images.length; img.src = item.images[idx]; };
      nav.append(prev, next);
      gallery.appendChild(nav);
    }
    card.appendChild(gallery);

    const h2 = document.createElement('h2');
    h2.textContent = item.name;
    card.appendChild(h2);

    const sku = document.createElement('div');
    sku.className = 'sku';
    sku.textContent = '–ê—Ä—Ç–∏–∫—É–ª: ' + item.sku;
    card.appendChild(sku);

    const desc = document.createElement('div');
    desc.className = 'desc';
    desc.textContent = item.description;
    card.appendChild(desc);

    const price = document.createElement('div');
    price.className = 'price';
    price.textContent = item.price ? `${item.price} ‚ÇΩ` : '';
    card.appendChild(price);

    const btn = document.createElement('button');
    btn.className = 'add-to-cart';
    btn.textContent = '–í –∫–æ—Ä–∑–∏–Ω—É';
    btn.onclick = e => { e.stopPropagation(); addToCart(item); btn.blur(); };
    card.appendChild(btn);

    return card;
  }

  // === 6) –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∫–æ—Ä–∑–∏–Ω—É =============================================
  function addToCart(item) {
    const found = cart.find(ci => ci.sku === item.sku);
    if (found) found.qty++;
    else cart.push({ ...item, qty: 1 });
    showCart();
  }

  // === 7) –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞–Ω–µ–ª–∏ –∫–æ—Ä–∑–∏–Ω—ã ========================================
  function showCart() {
    const items   = document.getElementById('cart-items');
    const summary = document.getElementById('cart-summary');

    if (cart.length === 0) {
      items.innerHTML = '';
      summary.innerHTML = '';
      return;
    }

    items.innerHTML = '';
    cart.forEach(i => {
      const line = document.createElement('div');
      line.innerHTML = `
        <b>${i.name}</b> (${i.sku}) ‚Äî ${i.price}‚ÇΩ √ó ${i.qty}
        <button data-sku="${i.sku}" class="minus">‚àí</button>
        <button data-sku="${i.sku}" class="plus">+</button>
      `;
      items.appendChild(line);
    });

    items.querySelectorAll('button').forEach(b => {
      const sku = b.dataset.sku;
      b.onclick = e => {
        e.stopPropagation();
        const it = cart.find(x => x.sku === sku);
        if (b.classList.contains('plus')) it.qty++;
        else it.qty--;
        cart = cart.filter(x => x.qty > 0);
        showCart();
        b.blur();
      };
    });

    const total = cart.reduce((sum, x) => sum + x.qty * x.price, 0);
    summary.innerHTML = `<b>–ò—Ç–æ–≥–æ:</b> ${total} ‚ÇΩ`;
  }

  // === 8) –ö–Ω–æ–ø–∫–∞ ¬´–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞¬ª =======================================
  const checkoutBtn = document.getElementById('checkout-btn');
  checkoutBtn.textContent = '–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞';
  checkoutBtn.onclick = e => {
    e.stopPropagation();
    if (cart.length === 0) return;
    let text = 'üõí –ù–æ–≤—ã–π –∑–∞–∫–∞–∑%0A';
    cart.forEach(i => { text += `${i.name} (${i.sku}) ‚Äî ${i.qty}√ó${i.price}‚ÇΩ%0A`; });
    text += `–ò—Ç–æ–≥–æ: ${cart.reduce((s, x) => s + x.qty * x.price, 0)}‚ÇΩ%0A`;
    window.open('https://t.me/MirrorWearSupport?text=' + encodeURIComponent(text), '_blank');
    checkoutBtn.blur();
  };

  // === 9) –û—á–∏—Å—Ç–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã ===================================================
  document.getElementById('clear-cart-btn').onclick = e => {
    e.stopPropagation();
    cart = [];
    showCart();
    e.currentTarget.blur?.();
  };

  // === 10) –ü–ª–∞–≤–∞—é—â–∞—è –∫–Ω–æ–ø–∫–∞ üõí ‚Äî toggle –ø–∞–Ω–µ–ª–∏ =============================
  const openCartBtn = document.createElement('button');
  openCartBtn.id = 'open-cart-btn';
  openCartBtn.className = 'open-cart-btn';
  openCartBtn.textContent = 'üõí';
  openCartBtn.title = '–û—Ç–∫—Ä—ã—Ç—å –∫–æ—Ä–∑–∏–Ω—É';
  openCartBtn.onclick = e => {
    e.stopPropagation();
    showCart();
    document.getElementById('cart-panel').classList.toggle('active');
    openCartBtn.blur();
  };
  document.body.appendChild(openCartBtn);

  // === 11) –ö–ª–∏–∫ –≤–Ω–µ –ø–∞–Ω–µ–ª–∏ ‚Äî —Å–∫—Ä—ã—Ç—å ========================================
  window.addEventListener('click', e => {
    const panel = document.getElementById('cart-panel');
    if (panel.classList.contains('active') && !panel.contains(e.target)) {
      panel.classList.remove('active');
      clearFocus();
      ensureNoActiveOnRoot();
    }
  });

  // === –°—Ç–∞—Ä—Ç ================================================================
  fetchCatalog();
});

